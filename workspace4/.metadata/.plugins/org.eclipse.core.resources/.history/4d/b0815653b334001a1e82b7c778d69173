package com.sdm.cdd.service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
//import org.springframework.transaction.annotation.Transactional;

import com.sdm.cdd.exceptionhandling.EntityNotFoundException;
import com.sdm.cdd.model.Product;
import com.sdm.cdd.model.RestrictedSKU;
import com.sdm.cdd.util.CommonUtil;



@Service
public class BusinessLogicImpl implements BusinessLogic {
	Logger logger = LoggerFactory.getLogger(BusinessLogicImpl.class);

/*	
	private static List<DrugSched> mockTestDrugSched;
	static{
		mockTestDrugSched= populateMockTestDrugSched();
	}
	
	@Autowired
	CPFMBrokerAPIRepository cpfmBrokerAPIRepository;
*/

	
	@Override
	public int ProcessRestrictedSKU(RestrictedSKU restrSKU) throws EntityNotFoundException {
		int returnCode = 0;
		String msg = CommonUtil.formatMessage("BusinessLogicImpl: ProcessRestrictedSKU : %s", "123");
//		logger.info(msg);
		
		List<String>  storeList = restrSKU.getStores();
		List<Product> restrSKUList = restrSKU.getRestrictedItems();
		List<Product> alertSKUList = restrSKU.getReadAlert();
		
		if (storeList.isEmpty()) {
			System.out.println("No Store selected");
			logger.info("No Store selected");
			returnCode = 1;
		}
		if (restrSKUList.isEmpty() && alertSKUList.isEmpty()) {
			System.out.println("No SKU selected");
			logger.info("No SKU selected");
			returnCode = 1;
		}

		if (returnCode == 0) {
		   for (int i = 0; i < storeList.size(); i++) {
		        System.out.println("StoreNum = " + storeList.get(i));
		   }
		}
		
		returnCode = CreateRestrictedSKUFiles(restrSKUList);
		
		return returnCode;	
	}

	
	private int CreateRestrictedSKUFiles(List<Product> restrSKU) {
		int returnCode = 0;
		
	    for (int i = 0; i < restrSKU.size(); i++) {
		     System.out.println("RestrictedSKU SKU = " + restrSKU.get(i).getSku());
		}
	    
		return returnCode;	
	}

}
